-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity tau_nn_dense_latency_ap_ufixed_9_0_4_0_0_ap_fixed_16_6_5_3_0_config17_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (8 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (8 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (8 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (8 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of tau_nn_dense_latency_ap_ufixed_9_0_4_0_0_ap_fixed_16_6_5_3_0_config17_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv19_335 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001100110101";
    constant ap_const_lv19_38C : STD_LOGIC_VECTOR (18 downto 0) := "0000000001110001100";
    constant ap_const_lv21_1FFA67 : STD_LOGIC_VECTOR (20 downto 0) := "111111111101001100111";
    constant ap_const_lv19_382 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001110000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv24_FA4400 : STD_LOGIC_VECTOR (23 downto 0) := "111110100100010000000000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";

attribute shreg_extract : string;
    signal r_V_fu_69_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_reg_152 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal r_V_365_fu_71_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_365_reg_156 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_366_fu_68_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_366_reg_160 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_367_fu_70_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_367_reg_164 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp155_fu_221_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp155_reg_258 : STD_LOGIC_VECTOR (21 downto 0);
    signal r_V_366_fu_68_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_366_fu_68_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal r_V_fu_69_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_fu_69_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_367_fu_70_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_367_fu_70_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_365_fu_71_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_365_fu_71_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_375_cast_fu_193_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_fu_201_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_373_cast_fu_189_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_377_cast_fu_197_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp1_fu_211_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp1_cast_fu_217_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_cast_fu_207_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_s_fu_227_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln859_fu_234_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal x_V_fu_238_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_267_fu_244_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln864_fu_254_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_ce_reg : STD_LOGIC;
    signal p_read_int_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal p_read1_int_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal p_read2_int_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal p_read3_int_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_return_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_365_fu_71_p00 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_366_fu_68_p00 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_367_fu_70_p00 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_fu_69_p00 : STD_LOGIC_VECTOR (18 downto 0);

    component tau_nn_mul_9ns_11ns_19_1_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component tau_nn_mul_9ns_12s_21_1_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;



begin
    mul_9ns_11ns_19_1_0_U606 : component tau_nn_mul_9ns_11ns_19_1_0
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 11,
        dout_WIDTH => 19)
    port map (
        din0 => r_V_366_fu_68_p0,
        din1 => r_V_366_fu_68_p1,
        dout => r_V_366_fu_68_p2);

    mul_9ns_11ns_19_1_0_U607 : component tau_nn_mul_9ns_11ns_19_1_0
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 11,
        dout_WIDTH => 19)
    port map (
        din0 => r_V_fu_69_p0,
        din1 => r_V_fu_69_p1,
        dout => r_V_fu_69_p2);

    mul_9ns_12s_21_1_0_U608 : component tau_nn_mul_9ns_12s_21_1_0
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 12,
        dout_WIDTH => 21)
    port map (
        din0 => r_V_367_fu_70_p0,
        din1 => r_V_367_fu_70_p1,
        dout => r_V_367_fu_70_p2);

    mul_9ns_11ns_19_1_0_U609 : component tau_nn_mul_9ns_11ns_19_1_0
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 11,
        dout_WIDTH => 19)
    port map (
        din0 => r_V_365_fu_71_p0,
        din1 => r_V_365_fu_71_p1,
        dout => r_V_365_fu_71_p2);





    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_int_reg <= sext_ln864_fu_254_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                p_read1_int_reg <= p_read1;
                p_read2_int_reg <= p_read2;
                p_read3_int_reg <= p_read3;
                p_read_int_reg <= p_read;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then
                r_V_365_reg_156 <= r_V_365_fu_71_p2;
                r_V_366_reg_160 <= r_V_366_fu_68_p2;
                r_V_367_reg_164 <= r_V_367_fu_70_p2;
                r_V_reg_152 <= r_V_fu_69_p2;
                tmp155_reg_258 <= tmp155_fu_221_p2;
            end if;
        end if;
    end process;
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_assign_proc : process(sext_ln864_fu_254_p1, ap_ce_reg, ap_return_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return <= ap_return_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return <= sext_ln864_fu_254_p1;
        else 
            ap_return <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    r_V_365_fu_71_p0 <= r_V_365_fu_71_p00(9 - 1 downto 0);
    r_V_365_fu_71_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read1_int_reg),19));
    r_V_365_fu_71_p1 <= ap_const_lv19_382(11 - 1 downto 0);
    r_V_366_fu_68_p0 <= r_V_366_fu_68_p00(9 - 1 downto 0);
    r_V_366_fu_68_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read2_int_reg),19));
    r_V_366_fu_68_p1 <= ap_const_lv19_335(11 - 1 downto 0);
    r_V_367_fu_70_p0 <= r_V_367_fu_70_p00(9 - 1 downto 0);
    r_V_367_fu_70_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read3_int_reg),21));
    r_V_367_fu_70_p1 <= ap_const_lv21_1FFA67(12 - 1 downto 0);
    r_V_373_cast_fu_189_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_reg_152),20));
    r_V_375_cast_fu_193_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_365_reg_156),21));
    r_V_377_cast_fu_197_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_366_reg_160),20));
    r_V_fu_69_p0 <= r_V_fu_69_p00(9 - 1 downto 0);
    r_V_fu_69_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read_int_reg),19));
    r_V_fu_69_p1 <= ap_const_lv19_38C(11 - 1 downto 0);
        sext_ln859_fu_234_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_s_fu_227_p3),24));

        sext_ln864_fu_254_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_267_fu_244_p4),16));

    tmp155_fu_221_p2 <= std_logic_vector(unsigned(tmp1_cast_fu_217_p1) + unsigned(tmp_cast_fu_207_p1));
    tmp1_cast_fu_217_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp1_fu_211_p2),22));
    tmp1_fu_211_p2 <= std_logic_vector(unsigned(r_V_373_cast_fu_189_p1) + unsigned(r_V_377_cast_fu_197_p1));
    tmp_267_fu_244_p4 <= x_V_fu_238_p2(23 downto 9);
        tmp_cast_fu_207_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_201_p2),22));

    tmp_fu_201_p2 <= std_logic_vector(unsigned(r_V_367_reg_164) + unsigned(r_V_375_cast_fu_193_p1));
    tmp_s_fu_227_p3 <= (tmp155_reg_258 & ap_const_lv1_0);
    x_V_fu_238_p2 <= std_logic_vector(signed(sext_ln859_fu_234_p1) + signed(ap_const_lv24_FA4400));
end behav;
