// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module tau_nn_dense_latency_ap_ufixed_9_0_4_0_0_ap_fixed_16_6_5_3_0_config17_s (
        ap_clk,
        ap_rst,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [8:0] p_read;
input  [8:0] p_read1;
input  [8:0] p_read2;
input  [8:0] p_read3;
output  [15:0] ap_return;
input   ap_ce;

reg[15:0] ap_return;

wire   [18:0] r_V_fu_69_p2;
reg   [18:0] r_V_reg_152;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
wire   [18:0] r_V_365_fu_71_p2;
reg   [18:0] r_V_365_reg_156;
wire   [18:0] r_V_366_fu_68_p2;
reg   [18:0] r_V_366_reg_160;
wire   [20:0] r_V_367_fu_70_p2;
reg   [20:0] r_V_367_reg_164;
wire   [21:0] tmp155_fu_221_p2;
reg   [21:0] tmp155_reg_258;
wire   [8:0] r_V_366_fu_68_p0;
wire   [10:0] r_V_366_fu_68_p1;
wire    ap_block_pp0_stage0;
wire   [8:0] r_V_fu_69_p0;
wire   [10:0] r_V_fu_69_p1;
wire   [8:0] r_V_367_fu_70_p0;
wire  signed [11:0] r_V_367_fu_70_p1;
wire   [8:0] r_V_365_fu_71_p0;
wire   [10:0] r_V_365_fu_71_p1;
wire   [20:0] r_V_375_cast_fu_193_p1;
wire   [20:0] tmp_fu_201_p2;
wire   [19:0] r_V_373_cast_fu_189_p1;
wire   [19:0] r_V_377_cast_fu_197_p1;
wire   [19:0] tmp1_fu_211_p2;
wire   [21:0] tmp1_cast_fu_217_p1;
wire  signed [21:0] tmp_cast_fu_207_p1;
wire   [22:0] tmp_s_fu_227_p3;
wire  signed [23:0] sext_ln859_fu_234_p1;
wire   [23:0] x_V_fu_238_p2;
wire   [14:0] tmp_267_fu_244_p4;
wire  signed [15:0] sext_ln864_fu_254_p1;
reg    ap_ce_reg;
reg   [8:0] p_read_int_reg;
reg   [8:0] p_read1_int_reg;
reg   [8:0] p_read2_int_reg;
reg   [8:0] p_read3_int_reg;
reg   [15:0] ap_return_int_reg;
wire   [18:0] r_V_365_fu_71_p00;
wire   [18:0] r_V_366_fu_68_p00;
wire   [20:0] r_V_367_fu_70_p00;
wire   [18:0] r_V_fu_69_p00;

tau_nn_mul_9ns_11ns_19_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 19 ))
mul_9ns_11ns_19_1_0_U606(
    .din0(r_V_366_fu_68_p0),
    .din1(r_V_366_fu_68_p1),
    .dout(r_V_366_fu_68_p2)
);

tau_nn_mul_9ns_11ns_19_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 19 ))
mul_9ns_11ns_19_1_0_U607(
    .din0(r_V_fu_69_p0),
    .din1(r_V_fu_69_p1),
    .dout(r_V_fu_69_p2)
);

tau_nn_mul_9ns_12s_21_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 21 ))
mul_9ns_12s_21_1_0_U608(
    .din0(r_V_367_fu_70_p0),
    .din1(r_V_367_fu_70_p1),
    .dout(r_V_367_fu_70_p2)
);

tau_nn_mul_9ns_11ns_19_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 19 ))
mul_9ns_11ns_19_1_0_U609(
    .din0(r_V_365_fu_71_p0),
    .din1(r_V_365_fu_71_p1),
    .dout(r_V_365_fu_71_p2)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= sext_ln864_fu_254_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        p_read1_int_reg <= p_read1;
        p_read2_int_reg <= p_read2;
        p_read3_int_reg <= p_read3;
        p_read_int_reg <= p_read;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        r_V_365_reg_156 <= r_V_365_fu_71_p2;
        r_V_366_reg_160 <= r_V_366_fu_68_p2;
        r_V_367_reg_164 <= r_V_367_fu_70_p2;
        r_V_reg_152 <= r_V_fu_69_p2;
        tmp155_reg_258 <= tmp155_fu_221_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = sext_ln864_fu_254_p1;
    end else begin
        ap_return = 'bx;
    end
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign r_V_365_fu_71_p0 = r_V_365_fu_71_p00;

assign r_V_365_fu_71_p00 = p_read1_int_reg;

assign r_V_365_fu_71_p1 = 19'd898;

assign r_V_366_fu_68_p0 = r_V_366_fu_68_p00;

assign r_V_366_fu_68_p00 = p_read2_int_reg;

assign r_V_366_fu_68_p1 = 19'd821;

assign r_V_367_fu_70_p0 = r_V_367_fu_70_p00;

assign r_V_367_fu_70_p00 = p_read3_int_reg;

assign r_V_367_fu_70_p1 = 21'd2095719;

assign r_V_373_cast_fu_189_p1 = r_V_reg_152;

assign r_V_375_cast_fu_193_p1 = r_V_365_reg_156;

assign r_V_377_cast_fu_197_p1 = r_V_366_reg_160;

assign r_V_fu_69_p0 = r_V_fu_69_p00;

assign r_V_fu_69_p00 = p_read_int_reg;

assign r_V_fu_69_p1 = 19'd908;

assign sext_ln859_fu_234_p1 = $signed(tmp_s_fu_227_p3);

assign sext_ln864_fu_254_p1 = $signed(tmp_267_fu_244_p4);

assign tmp155_fu_221_p2 = ($signed(tmp1_cast_fu_217_p1) + $signed(tmp_cast_fu_207_p1));

assign tmp1_cast_fu_217_p1 = tmp1_fu_211_p2;

assign tmp1_fu_211_p2 = (r_V_373_cast_fu_189_p1 + r_V_377_cast_fu_197_p1);

assign tmp_267_fu_244_p4 = {{x_V_fu_238_p2[23:9]}};

assign tmp_cast_fu_207_p1 = $signed(tmp_fu_201_p2);

assign tmp_fu_201_p2 = (r_V_367_reg_164 + r_V_375_cast_fu_193_p1);

assign tmp_s_fu_227_p3 = {{tmp155_reg_258}, {1'd0}};

assign x_V_fu_238_p2 = ($signed(sext_ln859_fu_234_p1) + $signed(24'd16401408));

endmodule //tau_nn_dense_latency_ap_ufixed_9_0_4_0_0_ap_fixed_16_6_5_3_0_config17_s
